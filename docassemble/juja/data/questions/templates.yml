attachment:
  name: Anmeldung ${ ensemble }
  filename: Anmeldung ${ ensemble }
  docx template file: Anmeldung.docx
  variable name: anmeldeformular
  valid formats: [pdf]
---
code: |
  key = "juja_rechnungsnummer"
  if testmodus:
    key = key + "_test"
  month = current_datetime(timezone="Europe/Berlin").format_datetime('M')
  with redis.lock(key + "-lock", timeout=5):
    redis.set(key, 250, nx=True)
    redis.incr(key)
    strval = str(redis.get(key).decode()).zfill(3)
    rechnungsnummer = f"A-22-{month}-{strval}"
  if testmodus:
    rechnungsnummer = rechnungsnummer + "-test"
---
code: |
  rechnungsdatum = today()
---
attachment:
  name: Rechnung ${ ensemble }
  filename: Rechnung ${ ensemble }
  docx template file: Rechnung.docx
  variable name: rechnungsformular
  valid formats: [pdf]
---
# Der Inhalt der E-Mail, die an neu angemeldete Mitglieder geschickt wird. Der
# Wert von template sollte nicht verändert werden.
template: person_email
# Der E-Mail-Betreff
subject: Ihre Anmeldung zur Fachtagung Musik und Demenz
# Diese Datei enthält den Mailinhalt (die Datei befindet sich im `templates`
# Ordner).
content file: E-Mail.md
---
# Der Inhalt der E-Mail, die als Benachrichtigung bei neuen Anmeldungen
# versendet wird. Der Wert von template sollte nicht verändert werden.
template: orga_email
# Der E-Mail-Betreff
subject: ${ person.name } hat sich zum MuD-Tagung angemeldet
# Diese Datei enthält den Mailinhalt (die Datei befindet sich im `templates`
# Ordner).
content file: Benachrichtigung.md
---
template: testergebnis
usedefs: [test_defs]
content file: Testmodus.md
---
# Wenn nach der Anmeldung gefragt wird, wird diese im Hintergrund erstellt.
# Währenddessen wird ein Wartebildschirm gezeigt, Dies ist dazu da, dass der
# "Absenden" Schritt einfach übersprungen werden kann.
sets: anmeldung
need: anmeldung_task
code: Warten
---
sets: rechnung
need: [rechnungsnummer, rechnung_task]
code: Warten
---
